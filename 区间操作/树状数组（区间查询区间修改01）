import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;

/*
 * 
 * 
 * 题目描述：	
            前缀和（prefix sum）Si = ∑(1-i) ak 
           前前缀和（preprefix sum）则把Si作为原序列再进行前缀和。记得再次求得前缀和第i个是SSi
           给一个长度为n的序列a1，a2.。。。。。an，有两种操作
	1.	Modify I x: 把 ai改成x；
	2.	Query i:查询SSi
	
 * 输入说明
 	第一行给出两个整数N，M。分别表示序列长度和操作个数
	接下来一行有N个数，即给定的序列a1,a2,....an
	接下来M行，每行对应一个操作，格式见题目描述
	
 * 输出说明
	对于每个询问操作，输出一行，表示所询问的SSi的值。
	
 * 	输入数据
    5 3
	1 2 3 4 5
	Query 5
	Modify 3 2
	Query 5
	
 *  输出结果
	35
	32
*/



public class Main {

	
	//维护兩個sum值
	static long sum1[], sum2[];
	static int n;

	//添加
	static void add(int x, long c) {
		int y = x;
		while (x <= n) {
			sum1[x] += c;
			sum2[x] += c * (y - 1);
			x += x & (-x);
		}
	}

	//查询
	static long query(int x) {
		long ans = 0;
		int y = x;
		while (x > 0) {

			ans += sum1[x] * y;
			ans -= sum2[x];
			x -= (-x) & (x);
		}
		return ans;
	}

	public static void main(String[] args) throws NumberFormatException, IOException {

		// 读入
		BufferedReader reader = new BufferedReader(new InputStreamReader(System.in)); // 输入
		String str[] = reader.readLine().split(" ");
		n = Integer.parseInt(str[0]);
		int m = Integer.parseInt(str[1]);

		str = reader.readLine().split(" ");
		int[] data = new int[n + 1];  //保存源数据
		sum1 = new long[n + 1];
		sum2 = new long[n + 1];

		for (int i = 1; i <= n; i++) {
			data[i] = Integer.parseInt(str[i - 1]);
			add(i, data[i]);   //差分，因为前缀和前缀和的差分就是源数据
		}

		StringBuffer sb = new StringBuffer();
		int a, b, c;
		for (int i = 0; i < m; i++) {
			str = reader.readLine().split(" ");
			a = Integer.parseInt(str[1]);
			if (str[0].equals("Query")) {
				sb.append(query(a)).append("\n");   //本来是需要求a和 0的，0的值为0，不需要找
			} else {
				b = Integer.parseInt(str[2]);
				c = b - data[a];
				if (c != 0)  
					add(a, c);
				data[a] = b;
			}
		}

		PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));
		out.print(sb);
		out.flush();
		out.close();
	}
}
